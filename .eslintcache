[{"/home/peace/workspace/dripdemofrontend/src/index.js":"1","/home/peace/workspace/dripdemofrontend/src/App.js":"2","/home/peace/workspace/dripdemofrontend/src/reportWebVitals.js":"3","/home/peace/workspace/dripdemofrontend/src/components/common/Header.js":"4","/home/peace/workspace/dripdemofrontend/src/constants/network.js":"5","/home/peace/workspace/dripdemofrontend/src/components/Trade.js":"6","/home/peace/workspace/dripdemofrontend/src/components/Stake.js":"7","/home/peace/workspace/dripdemofrontend/src/components/Liquidity.js":"8","/home/peace/workspace/dripdemofrontend/src/constants/addresses.js":"9","/home/peace/workspace/wyvern-market/src/index.js":"10","/home/peace/workspace/wyvern-market/src/reportWebVitals.js":"11","/home/peace/workspace/wyvern-market/src/App.js":"12","/home/peace/workspace/wyvern-market/src/constants/network.js":"13","/home/peace/workspace/wyvern-market/src/components/MintPage.js":"14","/home/peace/workspace/wyvern-market/src/components/OfferPage.js":"15","/home/peace/workspace/wyvern-market/src/components/Market.js":"16","/home/peace/workspace/wyvern-market/src/components/common/Header.js":"17","/home/peace/workspace/wyvern-market/src/constants/addresses.js":"18","/home/peace/workspace/wyvern-market/src/components/common/TokenCard.js":"19"},{"size":497,"mtime":1645951281523,"results":"20","hashOfConfig":"21"},{"size":1365,"mtime":1645714183009,"results":"22","hashOfConfig":"21"},{"size":364,"mtime":1645612282109,"results":"23","hashOfConfig":"21"},{"size":1132,"mtime":1645952504483,"results":"24","hashOfConfig":"21"},{"size":3001,"mtime":1646003821725,"results":"25","hashOfConfig":"21"},{"size":891,"mtime":1645618299659,"results":"26","hashOfConfig":"21"},{"size":4570,"mtime":1645962532707,"results":"27","hashOfConfig":"21"},{"size":873,"mtime":1645621405769,"results":"28","hashOfConfig":"21"},{"size":190,"mtime":1646028525975,"results":"29","hashOfConfig":"21"},{"size":497,"mtime":1646218790844,"results":"30","hashOfConfig":"31"},{"size":364,"mtime":1646218790844,"results":"32","hashOfConfig":"31"},{"size":1427,"mtime":1646290579914,"results":"33","hashOfConfig":"31"},{"size":3001,"mtime":1646218790834,"results":"34","hashOfConfig":"31"},{"size":2952,"mtime":1646250440774,"results":"35","hashOfConfig":"31"},{"size":7253,"mtime":1646290553474,"results":"36","hashOfConfig":"31"},{"size":87,"mtime":1646219198004,"results":"37","hashOfConfig":"31"},{"size":1129,"mtime":1646290593534,"results":"38","hashOfConfig":"31"},{"size":432,"mtime":1646225996324,"results":"39","hashOfConfig":"31"},{"size":5071,"mtime":1646286095334,"results":"40","hashOfConfig":"31"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"xbo0o7",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ef2nae",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/peace/workspace/dripdemofrontend/src/index.js",[],["84","85"],"/home/peace/workspace/dripdemofrontend/src/App.js",["86","87"],"import React, { useState } from 'react';\nimport Header from './components/common/Header';\nimport { addNet, switchNet } from './constants/network';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  useRoutes\n} from \"react-router-dom\";\nimport Trade from './components/Trade';\nimport Stake from './components/Stake';\nimport Liquidity from './components/Liquidity';\n\nconst ScreenList = (props) => {\n  let routes = useRoutes([\n      { path: \"/trade\", element:<Trade/> },\n      { path: \"/stake\", element: <Stake account={props.account}/> },\n      { path: \"/Liquidity\", element: <Liquidity/> },\n  ]);\n  return routes;\n};\n\nfunction App() {\n  const [userAccount, setUserAccount] = useState();\n\n  async function requestAccount() {\n    await window.ethereum.request(addNet); // \n    try {\n      await window.ethereum.request(switchNet); // \n    } catch (err) {\n      console.log(err);\n    }\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });  // connect wallet\n      setUserAccount(account);\n    }\n  }\n  return (\n    <div className=\"bg-blue-100 h-screen\">\n      <div>\n        <BrowserRouter>\n          <Header account={userAccount} requestAccount={requestAccount}/>\n          <ScreenList account={userAccount} />\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/peace/workspace/dripdemofrontend/src/reportWebVitals.js",[],"/home/peace/workspace/dripdemofrontend/src/components/common/Header.js",["88"],"\nimport { Link } from 'react-router-dom';\nimport Button from \"@material-tailwind/react/Button\";\n\nconst Header = ({ account, requestAccount }) => {\n\n  function goLink(link) {\n\n  }\n  return (\n    <div className=\"bg-green-400 h-16\">\n      <div className=\"flex text-white p-2\">\n        {/* <div className=\"p-4\" onClick={goLink('goLink')}>\n          <Link to=\"/trade\">Trade</Link>\n        </div> */}\n        <div className=\"p-4\">\n          <Link to=\"/stake\">Stake</Link>\n        </div>\n        {/* <div className=\"p-4\">\n          <Link to=\"/Liquidity\">Liquidity</Link>\n        </div> */}\n        <div className=\"flex-grow\"></div>\n        <Button\n          onClick={requestAccount}\n          color=\"amber\"\n          buttonType=\"filled\"\n          size=\"regular\"\n          block={false}\n          iconOnly={false}\n          ripple=\"light\"\n        >\n          {\n            !account ? (\n              <div>Connect Wallet</div>\n            ) : (\n              <div>{`${account.substring(0, 5)}..${account.substring(account.length - 5)}`}</div>\n            )\n          }\n        </Button>\n      </div>\n    </div >\n  )\n}\n\nexport default Header;","/home/peace/workspace/dripdemofrontend/src/constants/network.js",[],"/home/peace/workspace/dripdemofrontend/src/components/Trade.js",["89"],"import react from 'react';\n\nconst Trade = () => {\n  return (\n    <div className=\"grid grid-cols-2 gap-1\">\n      <div className=\"bg-indigo-800 p-5 rounded-xl border border-white m-5 text-white h-56\">\n        <div>\n          Buy Drip\n        </div>\n        <div className=\"flex\">\n          <input type=\"text\" className=\"mt-4 h-10 w-1/2 text-black\"/>\n          <div className=\"border border-white pt-2 pl-4 h-10 mt-4 w-24 ml-8 cursor-pointer\">Buy</div>\n        </div>\n      </div>\n      <div className=\"bg-indigo-800 p-5 rounded-xl border border-white m-5 text-white h-56\">\n        <div>\n          Sell Drip\n        </div>\n        <div className=\"flex\">\n          <input type=\"text\" className=\"mt-4 h-10 w-1/2 text-black\"/>\n          <div className=\"border border-white pt-2 pl-4 h-10 mt-4 w-24 ml-8 cursor-pointer\">Sell</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Trade;","/home/peace/workspace/dripdemofrontend/src/components/Stake.js",["90"],"import { ethers } from 'ethers';\nimport { formatEther, parseEther } from 'ethers/lib/utils';\nimport { useEffect, useState } from 'react';\nimport { address } from '../constants/addresses';\nimport { network } from '../constants/network';\nimport Drip from '../contracts/DripToken.sol/DripToken.json';\nimport Faucet from '../contracts/FaucetV4.sol/FaucetV4.json';\nimport Input from \"@material-tailwind/react/Input\";\nimport Button from \"@material-tailwind/react/Button\";\nimport H3 from \"@material-tailwind/react/Heading3\";\nimport H6 from \"@material-tailwind/react/Heading6\";\n\nconst Stake = ({ account }) => {\n  const [amount, setAmount] = useState(0);\n  const [available, setAvailable] = useState(0);\n  const [staked, setStaked] = useState(0);\n  const [claimed, setClaimed] = useState(0);\n  const [maxPayouts, setMaxPayouts] = useState(0);\n\n  async function getInfos() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.JsonRpcProvider(network.rpcUrls[0]);\n      const faucet = new ethers.Contract(address['faucet'], Faucet.abi, provider);\n      try {\n        const availAmount = await faucet.payoutOf(String(account));\n        setAvailable(formatEther(availAmount[0]));\n        const userInfo = await faucet.userInfoTotals(String(account));\n        setStaked(formatEther(userInfo[1]));\n        const totalClaimed = await faucet.total_withdraw();\n        setClaimed(formatEther(totalClaimed));\n        setMaxPayouts(formatEther(availAmount[1]));\n      } catch (err) {\n        console.log(err);\n      }\n\n    }\n  }\n  useEffect(() => {\n    getInfos();\n  }, [account]);\n  async function deposit() {\n    try {\n      if (!account) {\n        window.alert(\"Connect Wallet !\");\n      } else {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const drip = new ethers.Contract(address['drip'], Drip.abi, signer);\n        // approve\n        await drip.approve(address['faucet'], parseEther(String(amount)));\n        drip.once(\"Approval\", async () => {\n          // stake\n          const faucet = new ethers.Contract(address['faucet'], Faucet.abi, signer);\n          const stakeTx = await faucet.deposit(parseEther(String(amount)));\n          await stakeTx.wait();\n          window.alert(\"Deposited!\");\n          getInfos();\n        });\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n  // claim\n  async function requestClaim() {\n    try {\n      if (!account) {\n        window.alert(\"Connect Wallet !\");\n      } else {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const faucet = new ethers.Contract(address['faucet'], Faucet.abi, signer);\n        const claimTx = await faucet.claim();\n        await claimTx.wait();\n        window.alert(\"Claimed!\");\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n  return (\n    <div className=\"grid grid-cols-2 gap-1 p-12\">\n      <div className=\"grid grid-cols-2 gap-1 p-12\">\n        <div>\n        <H6 color=\"blueGray\">Rewards</H6>\n          <div>{available} Drips</div>\n        </div>\n        <div>\n        <H6 color=\"blueGray\">Deposits</H6>\n          <div>{staked} Drips</div>\n        </div>\n        <div>\n        <H6 color=\"blueGray\">Claimed</H6>\n          <div>{claimed} Drips</div>\n        </div>\n        <div>\n        <H6 color=\"blueGray\">Max Payout</H6>\n          <div>{maxPayouts} Drips</div>\n        </div>\n      </div>\n      <div>\n        <div className=\"grid grid-cols-1 gap-2 p-5 rounded-xl border border-white m-5 text-white\">\n          <H3 color=\"lightBlue\">Deposit and Claim</H3>\n          <Input\n            value={amount}\n            onChange={e => setAmount(e.target.value)}\n            type=\"text\"\n            color=\"indigo\"\n            size=\"regular\"\n            outline={true}\n            placeholder=\"amount\"\n            className=\"text-white\"\n          />\n          <Button\n            onClick={deposit}\n            color=\"lightBlue\"\n            buttonType=\"filled\"\n            size=\"lg\"\n            rounded={false}\n            block={true}\n            iconOnly={false}\n            ripple=\"dark\"\n          >\n            Deposit\n          </Button>\n          <Button\n            onClick={requestClaim}\n            color=\"green\"\n            buttonType=\"filled\"\n            size=\"lg\"\n            rounded={false}\n            block={true}\n            iconOnly={false}\n            ripple=\"dark\"\n          >\n            Claim\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Stake;","/home/peace/workspace/dripdemofrontend/src/components/Liquidity.js",[],"/home/peace/workspace/dripdemofrontend/src/constants/addresses.js",[],"/home/peace/workspace/wyvern-market/src/index.js",[],"/home/peace/workspace/wyvern-market/src/reportWebVitals.js",[],"/home/peace/workspace/wyvern-market/src/App.js",["91","92","93"],"/home/peace/workspace/wyvern-market/src/constants/network.js",[],"/home/peace/workspace/wyvern-market/src/components/MintPage.js",[],"/home/peace/workspace/wyvern-market/src/components/OfferPage.js",["94","95","96","97"],"/home/peace/workspace/wyvern-market/src/components/Market.js",[],"/home/peace/workspace/wyvern-market/src/components/common/Header.js",[],"/home/peace/workspace/wyvern-market/src/constants/addresses.js",[],"/home/peace/workspace/wyvern-market/src/components/common/TokenCard.js",["98","99","100","101","102","103","104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":6,"column":3,"nodeType":"112","messageId":"113","endLine":6,"endColumn":9},{"ruleId":"110","severity":1,"message":"114","line":7,"column":3,"nodeType":"112","messageId":"113","endLine":7,"endColumn":8},{"ruleId":"110","severity":1,"message":"115","line":7,"column":12,"nodeType":"112","messageId":"113","endLine":7,"endColumn":18},{"ruleId":"110","severity":1,"message":"116","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":40,"column":6,"nodeType":"119","endLine":40,"endColumn":15,"suggestions":"120"},{"ruleId":"110","severity":1,"message":"111","line":6,"column":3,"nodeType":"112","messageId":"113","endLine":6,"endColumn":9},{"ruleId":"110","severity":1,"message":"114","line":7,"column":3,"nodeType":"112","messageId":"113","endLine":7,"endColumn":8},{"ruleId":"110","severity":1,"message":"121","line":13,"column":8,"nodeType":"112","messageId":"113","endLine":13,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":86,"column":9,"nodeType":"112","messageId":"124","endLine":86,"endColumn":14},{"ruleId":"110","severity":1,"message":"125","line":113,"column":13,"nodeType":"112","messageId":"113","endLine":113,"endColumn":22},{"ruleId":"110","severity":1,"message":"126","line":114,"column":13,"nodeType":"112","messageId":"113","endLine":114,"endColumn":23},{"ruleId":"110","severity":1,"message":"127","line":115,"column":13,"nodeType":"112","messageId":"113","endLine":115,"endColumn":19},{"ruleId":"110","severity":1,"message":"128","line":5,"column":29,"nodeType":"112","messageId":"113","endLine":5,"endColumn":34},{"ruleId":"110","severity":1,"message":"129","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":13},{"ruleId":"110","severity":1,"message":"130","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":18},{"ruleId":"110","severity":1,"message":"131","line":11,"column":8,"nodeType":"112","messageId":"113","endLine":11,"endColumn":18},{"ruleId":"110","severity":1,"message":"132","line":12,"column":8,"nodeType":"112","messageId":"113","endLine":12,"endColumn":20},{"ruleId":"110","severity":1,"message":"133","line":13,"column":8,"nodeType":"112","messageId":"113","endLine":13,"endColumn":19},{"ruleId":"110","severity":1,"message":"134","line":65,"column":13,"nodeType":"112","messageId":"113","endLine":65,"endColumn":28},{"ruleId":"110","severity":1,"message":"135","line":70,"column":13,"nodeType":"112","messageId":"113","endLine":70,"endColumn":26},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'goLink' is defined but never used.","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInfos'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'Market' is defined but never used.","no-use-before-define","'owner' was used before it was defined.","usedBeforeDefined","'firstCall' is assigned a value but never used.","'secondCall' is assigned a value but never used.","'result' is assigned a value but never used.","'utils' is defined but never used.","'ERC20' is defined but never used.","'Atomicizer' is defined but never used.","'StaticUtil' is defined but never used.","'StaticERC721' is defined but never used.","'StaticERC20' is defined but never used.","'counterSelector' is assigned a value but never used.","'counterParams' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [account, getInfos]",{"range":"141","text":"142"},[1594,1603],"[account, getInfos]"]